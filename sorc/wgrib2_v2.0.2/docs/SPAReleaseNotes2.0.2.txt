Release Notes: wgrib2 v2.0.2


Release date September 2015

Changes and improvement since v0.1.9.8 (May 2013)
v0.1.9.8  5/2013 -----------------------------------
		small cleanup of makefile (C. R. Ferguson)
                changed g2clib = 0 -> internal decoders, 1 -> emulation of g2clib bugs, 
				2 -> g2clib
                added USE_G2CLIB, include/exclude g2clib decoders (still uses 2 small routines 
		   from g2clib) result of changes: g2clib decoders are not used for decoding 
                   unless enabled In the future, g2clib decoders will be eliminated from the
		   default configuration. (Needed for the debug configurations.)
		added -wind_dir
		minor edit of set_ts_dates (HEADER line) and error message string
		add rand to RPN.n returns uncorrelated random number field 0 to 1
		fixed OpenMP for unpk_complex.c, some optimization of unpk_complex
		removed OpenMP from iplib.2012. Never had a problem but C->fortran
		  is already a problem.  Why add a complication?
		fixed makefile:  make clean
		cleanup GDT.c
		-ave, -fcst_ave: support pdt 4.1 (ensemble fcsts)
		added unsigned char *code_table_4_4_location(unsigned char **sec)
		  updated with new pdt
		codetable 4.7 now has text descriptions
		updated f_ens for new codes
		-set_ftime works with more values of pdt
		updated Code_Values: forecast_time_in_units 
		struct gribtab_s -> struct gribtable_s: added range of valid mastertables
		    useful for handling distinct mastertables
		added user gribtables: setup_user_gribtab, mod: wgrib2, Mod_grib.c, cnames.c, Config.c
		update to iplib.2012 to handle larger gaussian grids (from WCOSS version)
		fixed error message from -import_bin
		added -err_bin, -err_string, -eof_bin, -eof_string


v0.1.9.9  9/2013 -----------------------------------
		fixed "decode" spelling mistake
		fixed code_table_0_0: reported by Matthew Foster, only affected -code_table_0.0
			and -disc (alias to previous options). All other codes used a macro
			which was correct
		update year code on Changes file
		updated makefile for new version of netcdf4
		fixed Ext_name.c for code table 4.3: added prob fcst, climatological thanks Manfred Schwarb
		added various Gaussian grids to ncep_grids.c
		better error message, f_g2clib
		can turn off png and jpeg2000 support by makefile
		 if turn off png, jasper, proj4, netcdf3 and netcdf4, no external 
		 libraries that need to be configured.  good for cross-compiling.
		0xSec fixed section number output for mode >= 2
		added lambertc grid defn for -new_grid: new_grid_lambertc, modified New_grid.c
		added radius_major and radius_minor to struct local in New_grid.c, so lambertc
		  calculations don't have to be repeated if already done
		Wrt_grb.c fprintf(c,"#define PRODUCTNUMBER %d\n",i+9); -> fprintf(c,"#define PRODUCTNUMBER %d\n",i+10);
		use zlib-1.2.8
		fixed same_sec4_nottime (test_sec.c) .. fixes -ave, -fcst_ave for pdt 8 and 9
			works for pdt 0.15  bug report:  K. Havener .. thanks

v0.2.0.0  6/2014 -----------------------------------
		Prelim support for grid templates 3.4, 3.5 and 3.12
		update gribtable SWEATX ->SX, AMPFLX->ANPMFLX, APEMFLX->ANPEMFLX, AOSGO -> ASGSO
                   EVERF -> EVGFC, DECF -> DECFC, KSSEDW -> KSSEW,
                   gone: "2DSED" "FSEED" "DIRSED" "HSIGN" "PKDIR" "MNSTP" "DMSPR" "WFFRAC" "TEMM1"
                   gone: "DIR11" "DIR22" "DSPR11" "DSPR22" "WLEN" "RDSXX" "RDSYY" "RDSXY"
			7: name changes, 17 deletions, new variables added 32 differences total
                   TYABA lost description, new variables, some defn changed
		renamed VERSION to WGRIB2_VERSION
		isdigit(c) -> isdigit ((unsigned char) c)
		isalpha(c) -> isalpha ((unsigned char) c)
		tolower(c) -> tolower ((unsigned char) c)
		added -get_int2 -set_int2, -get_ieee, -set_ieee
                changed help for get/set_byte/hex/int from location to octet
		update to gctpc: changes by Orion Poplawski (Fedora)
		support for ens pdt: test_ts_dates.c, NCEP_norm.c test_sec.c, Sec4.c, Code_Values.c
		   CodeTable.c
		mk_kgds.c: fix to 32768 and 32769 rotated lat-lon E and B staggered Arakawa grids
		   old code didn't set flag table 3.3 correctly, didn't handle grid winds
		   reported by NCAR.
		major changes to -merge_fcst: supports ensembles, many changes, old code had
		    problems
		wind_speed, wind_dir: old: failed if mastertab > 6, now works for all mastertab != 255
		    ie local table      
		Grads.c: f_ctl_inv, change probability numbers to keep trailing zeros  3 and 30 were
		  causing grads variable name to be aliased .. can stll happen if scaling factor isn't constant
		Grads.c: f_ctl_inv prob interval was fixed a2,first,first -> a2,first,second
		set_ftime: all pdts now
		wgrib2/makefile: compile Mod_grib.c with ${FLAGS} instead of ${CFLAGS}, minor fix
		set_date: updated for more PDTs.
		f_code_table_4.11s: added
		-set_ens, so that -1 to be no change
		fix -udf_arg buf[2]
		   want all calls to f_*() to use call_ARGN(buffer, NULL, arg1..argN)
		   if (local == NULL) then call is recursive. must examine code to check local not used!              
		all code: CALL_ARG{N} -> call_ARG{N}
		netcdf/mysql*.c:  f_lev(...) -> f_lev(call_ARG0)
		wgrib2: f_match_inv(..) -> f_match_inv(call_ARG0) f_help -> f_help(call_ARG0)
		added -set table_4.3
		added -Werror=format-security to makefile by suggestion of Orion Poplawski
		modified   sprintf(inv_out, string) to sprintf(inv_out,"%s", string) by Orion Poplawski
		  this changed -ens code 4.7  10 -> 10% 50 -> 50% and 90 -> 90%
		rpn: ln is fixed, popped stack by mistake
		changed wrtieee.c to eliminate warning message about uninitialized hr[4] vector, changes for openmp
		added -Werror=format to makefile
		removed unused variable from geo.c 
		deleted empty file help.c, pot case insen fs prob found J. Taylor
		support for code table 3.20
		better but incomplete support for cross-section grids
		updated gribtab again.  web page copy needs to be edited by hand because Boi is not consistent
		update Grads: f_ctl_inv .. handle pdt == 15
		removed -Werror=format from makefile (jasper would not compile)
		Cyclic.c updated for mercator and thinned grids
		Scan.c removed unused int scatter
		experimental staggered bits support: stagger.c geo.c grb2.h, mk_kgds.c
		removed: int packing_nx() from jpeg_pk.c, optimization that probably never gets used
		added: inv_f77 in Macro.c
		added: new item to match_inv npts=
		added: BUILD_COMMENTS to makefile, Help.c and Config.c and customization comments can add here
			wanted for special hwrf build
		fixed: mk_kgds for grid 203 id mass and wind fields
		updated producedure for making gribtable, add sort and edit, updated gribtable.dat
		updated complex_pk.c static int find_nbits(int i) -> static int find_nbits(unsigned int i)
		    minor speed ups, cleanup
		Earth.c  added code table 9. set_radius now handles user defined radius, major minor axes
		int8.c best_scaled_value() uses maximum scaled value < INT_MAX
		Netcdf.c  Fixed latlon grid longitudes.  COARDS wants longitude to be
		   monotonic and left longitude can be any value. However, Some codes will not
		   will not handle a left longitude of 180.5 but will work with -175.5.
		   So left longitude is set to [-180,180) and longitudes are monotonic.
		   Problem found by K. Havener who also did the testing.
		complex_pk: added nstruct (instead of ndata) for malloc of list and list_backup, save RAM
		fcst_ave: added test for valid dtime
		ave_test: added test for valid dtime
		rdieee: added to for read completion
		removed rd_bitstream(), 
		renamed rd_bitstream_offset() as rd_bitstream(), added 31 bit support
		removed rd_var_len_bitstream(), mk_bitstream()
		changed error add_bitstream to n_bits > 25, added error msg to add_many_bitsteam()
		Gctpc.c - enabled Albers equal area projection
		Gctpc.c - added staggering to gctpc_get_latlon
		stagger.c - added x[] and y[] args to stagger(), altered geo.c and wgrib2.h
		added support for staggered grids
		added set_ival
		updated set_ival to support a list of pointsZ
		complex_pk.c free(u) early, reduce footprint by 4*ndata bytes
		int8.c best_scaled_value() increases scaling (giving more precision) as long as 
                   val-floor(val) != 0 and val/10 < INT_MAX, this means val=1000 is kept as 1000.
		   NOTE: the scaling factor and scaled value changes from previous versions of wgrib2
		   NOTE: the scaled level1 and level2 have changed .. more precision
		gribtable: two SOILM with two different units kg/m/m and kg/m/m/m, both are deprecated
		   rename SOILM (kg/m/m/m) to SOIL_M, so grib1 and grib2 tables are the same
		   it is a deviation from NCO tables but NCO hasn't made a decision
		   NOTE: SOIL_M is not in NCO tables	

v0.2.0.1  7/2014 -----------------------------------
		-gctpc changed from inv to misc option
		-merge_fcst: if N == 0, output every merge step, for S2S (tigge)
		-set_metadata: fixed problems made in the 2.0.0 release.  


v0.2.0.2  3/2015 -----------------------------------
		Level.c added more fixed levels
		support for PDT=60,61
		alias pdt=code_table_4.0
		set_pdt(), copies all metadata for common pdts (-set_pdt +PDT) not complete
		-Sec4, removed code for extra info when PDT=4.0
		set_pdt(), fixed default sizes esp stat processing PDTs, added more PDTs
		enable staggered grids (gctpc)
		proj4_get_latlon: lambert, lat-lon, mercator, nps
		added ncep grids 4 and 45 to ncep_grids.c
		-s_out write new-line at end
		-nl_out is now inv_output function
		geo: regular2ll: 1x1 grids allowed
		updated code_table_4.3.dat
		updated code_table_4.10.dat
		updated: prod_def_temp_size.c
		add option -hybrid
		f_ctl_ens: fixed and updated pdt==2 and pdt==12 are ensembles, added new pdts
		updated CodeTable.4.7.dat
		support for pdt 4.6 and 4.10, added -percent, percent_value(), percent_value_location()
		support for pdt 4.6 and 4.10, in ctl_inv (Grads.c)
		fixed cname.c units for pdt 4.6 and 4.10 should not be %
		ffclose, by John Howard, ffclose_finished WND
		added ffclose to -bin -ieee -text -spread -grib -GRIB -import_ieee, -import_bin, 
		    -import_text -csv -cress_lola -ijbox -new_grid -small_grib -ijsmall_grib
		    -grib_ieee -ncep_uv -set_metadata -grib_out -lola -s_out -inv_f77 -inv
		    -print_out -nl_out -NCEP_norm -merge_fcst -ave -fcst_ave -irr_grid
		    -grib_out_irr -eof_string -eof_bin
		EOF.c: if wgrib2 called with no arguments
			old: eof_bin and eof_string were called
			new: err_bin and err_string are called
		       if f_h is called
			old: eof_bin and eof_string were called
			new: err_bin and err_string are called
		    eof_string, eof_bin are called with mode -2  instead of explicitly
		    err_bin, err_string: not called if no error
		all ffopens are paired with ffclose
		Match.c free memory, make match_count a global variable.
		rd_inventory: split from wgrib.c and put in own file, reads from input rather than stdin
		setup options will get finalized, so to close files
		pdt 4.44 only has 2 octets for forecast time!
                   set_ftime .. forecast time from int -> uint
		added declaration Cyclic.c, dummy function f_proj4 from John Howard
		moved scaling() from Precision.c to Code_Values.c added png, complex spectral
			and simple log-pre-processed
		change exit(0) to return 0 in main()
		CALLABLE_WGRIB2: setjmp/longjmp, exit -> return, fopen -> ffopen (input)
		CALLABLE_WGRIB2: -persistant_file
		replace fopen by ffopen in options, AAIG, i_file,
		f_h does not print out help message
		setup_user_gribtable.c, close input file
		-unix_time is now compile time option for John Howard
		converted some strcpy -> strncpy
		is_match: reorder loops for speed, add OMP for one loop
		added Match_fs package, like Match but for fixed strings
		wgrib2.c change to add Match_fs package
		wgrib2.c reorder search for option names
		initial support for code table 1.5 and 1.6
		wgrib2.c replaced seq_input into enum in_dev_type in_type;
		small_grib: unsigned int new_sec[7] -> new_sec[8] .. pretty typing
		rd_grib_msg*  updated to read more than 1 file at a time
		increased size sec[], sec[9] = last valid bitmap .. only by sec[] used to read
		added error messages Gctpc.c
		unpk_run_length.c: David Bindermani
		    while (vals[i]> mv && i < nvals) -> while (i < nvals && mvals[i]> mv)
		setup_user_gribtable.c added fclose(input)
		set_metadata: fixed format of scanf
		cleanup of defined but unused variables (found using cppcheck)
		Scan.c: added parameters to routines, make it callable by f_import_grib()
		added -import_grib
		-fcst_ave, -ave, -wind_dir, -wind_speed, -merge, -ncep_norm : old: picked 
                    up scaling from first record.  Problem when first record was constant field.
		    set use_scaling=0
		-fcst_ave, -ave: replaced undo_scan_order, saved many mallocs/frees
		can now write complex-packed files with bitmaps (for NAM)
		added MAXUW and MAXUV to list of vector fields
		Ensemble.c Manfred Schwarb: treat number_of_forecasts_in_the_ensemble(sec) as signed
		    instead of cast to unsigned, (no change in code behavior)
		Level.c Manfred Schwarb: if (type <= 192) -> if (type < 192)  problem if level = 192 (local level)
		Merge.c Manfred Schwarb: treat code_table_4_10(sec) as signed instead of case to unsigned
		    (no change in code behavior)
		NCEP_norm.c Manfred Schwarb: removed unused variable pdt, typo in format
		Prob.c Manfred Schwarb: fixed format print hex number with %u format 
		f_new_grid_vectors() accepts lists
		NCEP_uv.c: put struct local_struct into function definition (looks better)
		NCEP_uv: better error messages
		match_inv: added -varX, -T, -start_FT and -end_FT, decided against -VT
		    -VT has same value as -start_FT, -VT and -vt have similar vt=(number) entries
		complex_grib_out: strange nam file: RIME had val=(1e+10+i*2^1)*10^-10, i=0..511 (#bits=9)
			convert to data to integer vector  u[i] = floor((data[i] - ref)*scale + 0.5);
			when using decimal scaling, ref is not quite the min value under all compilation
			options (could be 64-bit register vs 32-bit memory value).  The scaling factor is 
			so large that u[i] could be negative!  Added a step to make sure u[i] is >= 0
		-fcst_ave, -ave, -wind_dir, -wind_speed, -merge, -ncep_norm : restored to old
		    behavior, scaling from first record. 
		added -code_table_4.8
		-set added table_4.7 table_4.8
		-rpn: added smth9g and smth9r
		-set_percentile: added, added "N% level" to set_metadata
		Ensemble.c pdt=2 changed output to make clearer
		-pdt old output: code table 4.0=1 Individual ...  new: pdt=1
		added -pdt to match_inv
		-set_prob: added, added support in set_metadata
		-set_ens_num: now callable from code
		-set_metadata:  supports ens=(+/-)number, ens=hi-res ctl ens=low-res ctl, X ensemble members
		   note:earlier versions ignored "ens=low-res ctl"
		polar2ll: make openmp gau2ll
		Config.c: would say that gctpc was default even if not

